name: Binaries Tag Build

on:
  workflow_dispatch:
  push:
    branches:
      - master
    tags:
      - 'v[0-9]+.[0-9]+.[0-9]+'
      - '[0-9]+.[0-9]+.[0-9]+'
      - 'v[0-9]+.[0-9]+.[0-9]+-[0-9]+'
      - '[0-9]+.[0-9]+.[0-9]+-[0-9]+'

jobs:
  build-linux-binaries:
    runs-on: ubuntu-latest
    strategy:
      matrix:
        goosarch:
          - 'linux/amd64'
          - 'linux/arm'
          - 'linux/arm64'
    steps:
      - name: Checkout
        uses: actions/checkout@v4
      - name: Install pnpm
        uses: pnpm/action-setup@v4
        with:
          version: latest
          run_install: false
          standalone: true
      - name: Build frontend dependencies
        working-directory: ./frontend
        run: |
          pnpm install
          pnpm build
      - name: Install latest Go
        uses: actions/setup-go@v5
        with:
          go-version: 'stable'
      - name: Get OS and arch info
        run: |
          GOOSARCH=${{matrix.goosarch}}
          GOOS=${GOOSARCH%/*}
          GOARCH=${GOOSARCH#*/}
          BINARY_NAME=yt-dlp-webui_$GOOS-$GOARCH
          echo "BINARY_NAME=$BINARY_NAME" >> $GITHUB_ENV
          echo "GOOS=$GOOS" >> $GITHUB_ENV
          echo "GOARCH=$GOARCH" >> $GITHUB_ENV
          echo "CGO_ENABLED=0" >> $GITHUB_ENV
      - name: Build ${{matrix.goosarch}} Binary
        run: go build -o "$BINARY_NAME" -v
      - name: Publish ${{matrix.goosarch}} binary
        uses: softprops/action-gh-release@v2
        with:
          draft: false
          prerelease: false
          files: ${{env.BINARY_NAME}}
          make_latest: true
        env:
          GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}

  clear-cache:
    needs: build-linux-binaries
    runs-on: ubuntu-latest
    steps:
      - name: Clear cache
        uses: actions/github-script@v7
        with:
          script: |
            console.log("About to clear")
            const caches = await github.rest.actions.getActionsCacheList({
              owner: context.repo.owner,
              repo: context.repo.repo,
            })
            for (const cache of caches.data.actions_caches) {
              console.log(cache)
              github.rest.actions.deleteActionsCacheById({
                owner: context.repo.owner,
                repo: context.repo.repo,
                cache_id: cache.id,
              })
            }
            console.log("Clear completed")
